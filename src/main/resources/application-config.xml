<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cxf="http://camel.apache.org/schema/cxf" xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://camel.apache.org/schema/cxf
                           http://camel.apache.org/schema/cxf/camel-cxf.xsd
                           http://camel.apache.org/schema/spring
                           http://camel.apache.org/schema/spring/camel-spring.xsd">

	<context:property-placeholder location="classpath:datasource.properties" />
	<bean id="addressBaseDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.postgresql.Driver"/>
		<property name="url" value="${datasource.url}"/>
		<property name="username" value="${datasource.username}"/>
		<property name="password" value="${datasource.password}"/>
	</bean>
	<bean id="sql" class="org.apache.camel.component.sql.SqlComponent">
		<property name="dataSource" ref="addressBaseDataSource"/>
	</bean>

	<bean id="addressingService" class="uk.gov.dwp.service.AddressingService" />
	<bean id="OSPlacesPostcodeAdapter" class="uk.gov.dwp.service.osplaces.Adapter" />
	<bean id="DatabasePostcodeExpressionBuilder" class="uk.gov.dwp.service.database.PostcodeExpressionBuilder" />
	<bean id="DatabasePostcodeAdapter" class="uk.gov.dwp.service.database.Adapter" />
	<bean id="ExceptionProcessor" class="uk.gov.dwp.service.osplaces.ExceptionProcessor" />
	<bean id="RESTExceptionResponseSetter" class="uk.gov.dwp.service.osplaces.RESTExceptionResponseSetter" />
	<bean id="QASExceptionResponseSetter" class="uk.gov.dwp.service.osplaces.QASExceptionResponseSetter" />

	<camel:camelContext >
		<camel:propertyPlaceholder id="properties" location="classpath:route.properties, classpath:database.properties" />
		<camel:dataFormats>
			<camel:json id="OSPlacesPostcodeResponse" library="Jackson" unmarshalTypeName="uk.gov.dwp.service.osplaces.postcode.Response" />
		</camel:dataFormats>
		
		<!-- Global Exception Handler -->
		<camel:onException id="GLOBAL_EXCEPTION_HANDLER">
			<camel:exception>java.lang.Exception</camel:exception>
			<camel:handled>
				<camel:constant>true</camel:constant>
			</camel:handled>
			
			<camel:process ref="ExceptionProcessor"></camel:process>
			
		</camel:onException>


		<!-- REST ROUTE: For non-legacy requests -->
		<!-- OS Places -->
		<camel:route id="REST_ROUTE_OSPLACES">
			<camel:from uri="cxfrs:bean:addressingRsServerOSPlaces" />
			<camel:setProperty propertyName="EXCEPTION_RESPONSE_SETTER_OSPLACES">
				<camel:constant>RESTExceptionResponseSetter</camel:constant>
			</camel:setProperty>
			
			<camel:to uri="direct:call_osplaces" />
			<camel:to uri="OSPlacesPostcodeAdapter" id="ADAPTER_OSPLACES"/>
		</camel:route>
		<!-- Database - AddressBase on PostgreSQL -->
		<camel:route id="REST_ROUTE_DATABASE">
			<camel:from uri="cxfrs:bean:addressingRsServerDatabase" />
			<camel:setProperty propertyName="EXCEPTION_RESPONSE_SETTER_DATABASE">
				<camel:constant>DatabaseExceptionResponseSetter</camel:constant>
			</camel:setProperty>

			<camel:to uri="direct:call_database" />
			<camel:to uri="DatabasePostcodeAdapter" id="ADAPTER_DATABASE"/>
		</camel:route>

		<!-- LEGACY ROUTES: There is one route defined for each supported QAS version -->
		<!-- OS Places -->
 		<camel:route>
			<camel:from uri="cxf:bean:OnDemand-2011-03-Endpoint-OSPlaces" />
			<camel:setProperty propertyName="EXCEPTION_RESPONSE_SETTER_OSPLACES">
				<camel:constant>QASExceptionResponseSetter</camel:constant>
			</camel:setProperty>
			
			<camel:choice>
				<camel:when>
					<camel:simple>${header.operationName} == 'DoSearch'</camel:simple>
					<camel:setHeader headerName="operationName">
						<camel:constant>getByPostcode</camel:constant>
					</camel:setHeader>
					<camel:to uri="OnDemand-2011-03-Inbound-PostCode-Search-Adapter" />
					<camel:to uri="direct:call_osplaces" />
					<camel:to uri="OnDemand-2011-03-Outbound-Postcode-Search-Adapter-OSPlaces" />
				</camel:when>
		 		<camel:when>
					<camel:simple>${header.operationName} == 'DoGetAddress'</camel:simple>
					<camel:setHeader headerName="operationName">
						<camel:constant>getByUprn</camel:constant>
					</camel:setHeader>
					<camel:to uri="OnDemand-2011-03-Inbound-Uprn-Search-Adapter" />
					<camel:to uri="direct:call_osplaces" />
					<camel:to uri="OnDemand-2011-03-Outbound-Uprn-Search-Adapter-OSPlaces" />
				</camel:when>
			</camel:choice>
		</camel:route>
		<!-- Database - AddressBase on PostgreSQL -->
		<camel:route>
			<camel:from uri="cxf:bean:OnDemand-2011-03-Endpoint-Database" />
			<camel:setProperty propertyName="EXCEPTION_RESPONSE_SETTER_DATABASE">
				<camel:constant>QASExceptionResponseSetter</camel:constant>
			</camel:setProperty>

			<camel:choice>
				<camel:when>
					<camel:simple>${header.operationName} == 'DoSearch'</camel:simple>
					<camel:setHeader headerName="operationName">
						<camel:constant>getByPostcode</camel:constant>
					</camel:setHeader>
					<camel:to uri="OnDemand-2011-03-Inbound-PostCode-Search-Adapter" />
					<camel:to uri="direct:call_database" />
					<camel:to uri="OnDemand-2011-03-Outbound-Postcode-Search-Adapter-Database" />
				</camel:when>
				<camel:when>
					<camel:simple>${header.operationName} == 'DoGetAddress'</camel:simple>
					<camel:setHeader headerName="operationName">
						<camel:constant>getByUprn</camel:constant>
					</camel:setHeader>
					<camel:to uri="OnDemand-2011-03-Inbound-Uprn-Search-Adapter" />
					<camel:to uri="direct:call_database" />
					<camel:to uri="OnDemand-2011-03-Outbound-Uprn-Search-Adapter-Database" />
				</camel:when>
			</camel:choice>
		</camel:route>

		<!-- 
			 Common Route which sends search queries to OS Places. The response is unmarshalled in to a 
		     uk.gov.dwp.service.osplaces.postcode.Response object which can then be adapted to the correct format
		     in the "calling" route
		-->
		<camel:route id="COMMON_ROUTE_OSPLACES">
			<camel:from uri="direct:call_osplaces" />
						
			<camel:setHeader headerName="CamelHttpMethod">
				<camel:constant>GET</camel:constant>
			</camel:setHeader>
			<camel:setHeader headerName="CamelHttpUri">
				<camel:constant>{{osaddress.endpoint}}</camel:constant>
			</camel:setHeader>

			<camel:choice>
				<camel:when>
					<camel:simple>${header.operationName} == 'getByPostcode'</camel:simple>
					<camel:setHeader headerName="CamelHttpPath">
						<camel:constant>places/v1/addresses/postcode</camel:constant>
					</camel:setHeader>
					<camel:setHeader headerName="CamelHttpQuery">
						<camel:simple>postcode=${body}&amp;format=json&amp;dataset=DPA&amp;key=STUB_AUTH_KEY</camel:simple>
					</camel:setHeader>			
				</camel:when>
							
				<camel:when>
					<camel:simple>${header.operationName} == 'getByUprn'</camel:simple>
					<camel:setHeader headerName="CamelHttpPath">
						<camel:constant>places/v1/addresses/uprn</camel:constant>
					</camel:setHeader>
					<camel:setHeader headerName="CamelHttpQuery">
						<camel:simple>uprn=${body}&amp;format=json&amp;dataset=DPA&amp;key=STUB_AUTH_KEY</camel:simple>
					</camel:setHeader>				
				</camel:when>
				
			</camel:choice>
				
			<camel:to uri="{{osaddress.endpoint}}" />
			<camel:unmarshal id="UNMARSHALL_REMOTE_RESPONSE_OSPLACES" ref="OSPlacesPostcodeResponse" />
			
		</camel:route>

		<!--
			 Common Route which sends SQL queries to a PostgreSQL database containing AddressBase data. The results
			 are mapped to a List (one entry for each row) of Maps (one entry for each column using the column
			 name as the key) which can then be adapted to the correct format in the "calling" route
		-->
		<camel:route id="COMMON_ROUTE_DATABASE">
			<camel:from uri="direct:call_database"/>

			<camel:choice>
				<camel:when>
					<camel:simple>${header.operationName} == 'getByPostcode'</camel:simple>
					<camel:setHeader headerName="query">
						<camel:constant>{{sql.selectByPostcode}}</camel:constant>
					</camel:setHeader>
					<camel:to uri="DatabasePostcodeExpressionBuilder" />
					<camel:setHeader headerName="postcodeExpression">
						<camel:constant>${body}</camel:constant>
					</camel:setHeader>
				</camel:when>

				<camel:when>
					<camel:simple>${header.operationName} == 'getByUprn'</camel:simple>
					<camel:setHeader headerName="query">
						<camel:constant>{{sql.selectByUprn}}</camel:constant>
					</camel:setHeader>
					<camel:setHeader headerName="uprn">
						<camel:constant>${body}</camel:constant>
					</camel:setHeader>
				</camel:when>

			</camel:choice>

			<camel:to uri="sql:${query}"/>

		</camel:route>
	</camel:camelContext>

	<!-- LEGACY CONVERTERS: -->
	<bean id="OnDemand-2011-03-Inbound-PostCode-Search-Adapter" class="uk.gov.dwp.service.qas.ondemand_2011_03.PostcodeSearchInboundAdapter" />
	<bean id="OnDemand-2011-03-Outbound-Postcode-Search-Adapter-OSPlaces" class="uk.gov.dwp.service.qas.ondemand_2011_03.PostcodeSearchOutboundAdapterOSPlaces" />
	<bean id="OnDemand-2011-03-Outbound-Postcode-Search-Adapter-Database" class="uk.gov.dwp.service.qas.ondemand_2011_03.PostcodeSearchOutboundAdapterDatabase" />
	<bean id="OnDemand-2011-03-Inbound-Uprn-Search-Adapter" class="uk.gov.dwp.service.qas.ondemand_2011_03.UprnSearchInboundAdapter" />
	<bean id="OnDemand-2011-03-Outbound-Uprn-Search-Adapter-OSPlaces" class="uk.gov.dwp.service.qas.ondemand_2011_03.UprnSearchOutboundAdapterOSPlaces" />
	<bean id="OnDemand-2011-03-Outbound-Uprn-Search-Adapter-Database" class="uk.gov.dwp.service.qas.ondemand_2011_03.UprnSearchOutboundAdapterDatabase" />

</beans>
