<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cxf="http://camel.apache.org/schema/cxf" xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://camel.apache.org/schema/cxf
                           http://camel.apache.org/schema/cxf/camel-cxf.xsd
                           http://camel.apache.org/schema/spring
                           http://camel.apache.org/schema/spring/camel-spring.xsd">
                           

	<bean id="addressingService" class="uk.gov.dwp.service.AddressingService" />
	<bean id="OSPlacesPostcodeAdapter" class="uk.gov.dwp.service.osplaces.Adapter" />
	<bean id="ExceptionProcessor" class="uk.gov.dwp.service.osplaces.ExceptionProcessor" />
	<bean id="RESTExceptionResponseSetter" class="uk.gov.dwp.service.osplaces.RESTExceptionResponseSetter" />
	<bean id="QASExceptionResponseSetter" class="uk.gov.dwp.service.osplaces.QASExceptionResponseSetter" />
	

	<camel:endpoint id="osplaces" uri="{{osaddress.endpoint}}" />

	<camel:camelContext >
		<camel:propertyPlaceholder id="properties" location="classpath:route.properties" />
		<camel:dataFormats>
			<camel:json id="OSPlacesPostcodeResponse" library="Jackson" unmarshalTypeName="uk.gov.dwp.service.osplaces.postcode.Response" />
		</camel:dataFormats>
		
		<!-- Global Exception Handler -->
		<camel:onException>
			<camel:exception>java.lang.Exception</camel:exception>
			<camel:handled>
				<camel:constant>true</camel:constant>
			</camel:handled>
			
			<camel:process ref="ExceptionProcessor"></camel:process>
			
		</camel:onException>

		
		<!-- REST ROUTE: For non-legacy requests -->
		<camel:route id="REST_ROUTE">
			<camel:from uri="cxfrs:bean:addressingRsServer" />
			<camel:setProperty propertyName="EXCEPTION_RESPONSE_SETTER">
				<camel:constant>RESTExceptionResponseSetter</camel:constant>
			</camel:setProperty>
			
			<camel:to uri="direct:call_osplaces" />
			<camel:to uri="OSPlacesPostcodeAdapter" />
		</camel:route>

		<!-- LEGACY ROUTES: There is one route defined for each supported QAS version -->
 		<camel:route>
			<camel:from uri="cxf:bean:OnDemand-2011-03-Endpoint" />
			<camel:setProperty propertyName="EXCEPTION_RESPONSE_SETTER">
				<camel:constant>QASExceptionResponseSetter</camel:constant>
			</camel:setProperty>
			
			<camel:choice>
				<camel:when>
					<camel:simple>${header.operationName} == 'DoSearch'</camel:simple>
					<camel:setHeader headerName="operationName">
						<camel:constant>getByPostcode</camel:constant>
					</camel:setHeader>
					<camel:to uri="OnDemand-2011-03-Inbound-PostCode-Search-Adapter" />
					<camel:to uri="direct:call_osplaces" />
					<camel:to uri="OnDemand-2011-03-Outbound-Postcode-Search-Adapter" />
				</camel:when>
		 		<camel:when>
					<camel:simple>${header.operationName} == 'DoGetAddress'</camel:simple>
					<camel:setHeader headerName="operationName">
						<camel:constant>getByUprn</camel:constant>
					</camel:setHeader>
					<camel:to uri="OnDemand-2011-03-Inbound-Uprn-Search-Adapter" />
					<camel:to uri="direct:call_osplaces" />
					<camel:to uri="OnDemand-2011-03-Outbound-Uprn-Search-Adapter" />

				</camel:when>
			</camel:choice>
		</camel:route>
		
		<!-- 
			 Common Route which sends search queries to OS Places. The response is unmarshalled in to a 
		     uk.gov.dwp.service.osplaces.postcode.Response object which can then be adapted to the correct format
		     in the "calling" route
		-->
		<camel:route id="COMMON_ROUTE">
			<camel:from uri="direct:call_osplaces" />
						
			<camel:setHeader headerName="CamelHttpMethod">
				<camel:constant>GET</camel:constant>
			</camel:setHeader>
			<camel:setHeader headerName="CamelHttpUri">
				<camel:constant>{{osaddress.endpoint}}</camel:constant>
			</camel:setHeader>

			<camel:choice>
				<camel:when>
					<camel:simple>${header.operationName} == 'getByPostcode'</camel:simple>
					<camel:setHeader headerName="CamelHttpPath">
						<camel:constant>places/v1/addresses/postcode</camel:constant>
					</camel:setHeader>
					<camel:setHeader headerName="CamelHttpQuery">
						<camel:simple>postcode=${body}&amp;format=json&amp;dataset=DPA&amp;key=YOUR_API_KEY</camel:simple>
					</camel:setHeader>			
				</camel:when>
							
				<camel:when>
					<camel:simple>${header.operationName} == 'getByUprn'</camel:simple>
					<camel:setHeader headerName="CamelHttpPath">
						<camel:constant>places/v1/addresses/uprn</camel:constant>
					</camel:setHeader>
					<camel:setHeader headerName="CamelHttpQuery">
						<camel:simple>uprn=${body}&amp;format=json&amp;dataset=DPA&amp;key=YOUR_API_KEY</camel:simple>
					</camel:setHeader>				
				</camel:when>
				
			</camel:choice>
				
			<camel:to uri="ref:osplaces" />
			<camel:unmarshal ref="OSPlacesPostcodeResponse" />
			
		</camel:route>
	</camel:camelContext>

	<!-- LEGACY CONVERTERS: -->
	<bean id="OnDemand-2011-03-Inbound-PostCode-Search-Adapter" class="uk.gov.dwp.service.qas.ondemand_2011_03.PostcodeSearchInboundAdapter" />
	<bean id="OnDemand-2011-03-Outbound-Postcode-Search-Adapter" class="uk.gov.dwp.service.qas.ondemand_2011_03.PostcodeSearchOutboundAdapter" />
	<bean id="OnDemand-2011-03-Inbound-Uprn-Search-Adapter" class="uk.gov.dwp.service.qas.ondemand_2011_03.UprnSearchInboundAdapter" />
	<bean id="OnDemand-2011-03-Outbound-Uprn-Search-Adapter" class="uk.gov.dwp.service.qas.ondemand_2011_03.UprnSearchOutboundAdapter" />
	
</beans>
